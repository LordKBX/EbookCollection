# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'D:\CODES\Python\EbookCollection\editor\interface.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_EditorWindow(object):
    def setupUi(self, EditorWindow):
        EditorWindow.setObjectName("EditorWindow")
        EditorWindow.resize(720, 600)
        EditorWindow.setMinimumSize(QtCore.QSize(720, 600))
        EditorWindow.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        EditorWindow.setStyleSheet("QWidget{\n"
"    background-color: rgb(62, 62, 62);\n"
"    color: rgb(255, 255, 255);\n"
"}\n"
"\n"
"QToolTip   {\n"
"    border: 1px solid black;\n"
"    background-color: rgb(255, 213, 61);\n"
"    color: rgb(0, 0, 0);\n"
"}\n"
"QPushButton{\n"
"    background-color:rgb(80, 80, 80);\n"
"}\n"
"QPushButton:hover{\n"
"    background-color:rgb(120, 120, 120);\n"
"}\n"
"QPushButton:pressed{\n"
"    background-color:rgb(150, 150, 255);\n"
"}\n"
"QPushButton:checked{\n"
"    background-color:rgb(150, 150, 150);\n"
"}\n"
"QFrame{\n"
"    border-color: #828790;\n"
"}\n"
"QTableWidget{\n"
"    border-color: #828790;\n"
"}\n"
"QTreeWidget{\n"
"    border-color: #828790;\n"
"}\n"
"QLineEdit{\n"
"    border-color: #828790;\n"
"}")
        self.horizontalLayout = QtWidgets.QHBoxLayout(EditorWindow)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.buttonBoxLayout = QtWidgets.QVBoxLayout()
        self.buttonBoxLayout.setSpacing(6)
        self.buttonBoxLayout.setObjectName("buttonBoxLayout")
        self.buttonAddItem = QtWidgets.QPushButton(EditorWindow)
        self.buttonAddItem.setMinimumSize(QtCore.QSize(50, 50))
        self.buttonAddItem.setMaximumSize(QtCore.QSize(50, 50))
        self.buttonAddItem.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.buttonAddItem.setText("")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("D:\\CODES\\Python\\EbookCollection\\editor\\../icons/white/add_item.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.buttonAddItem.setIcon(icon)
        self.buttonAddItem.setIconSize(QtCore.QSize(40, 40))
        self.buttonAddItem.setCheckable(False)
        self.buttonAddItem.setDefault(False)
        self.buttonAddItem.setFlat(False)
        self.buttonAddItem.setObjectName("buttonAddItem")
        self.buttonBoxLayout.addWidget(self.buttonAddItem)
        self.buttonDelItem = QtWidgets.QPushButton(EditorWindow)
        self.buttonDelItem.setMinimumSize(QtCore.QSize(50, 50))
        self.buttonDelItem.setMaximumSize(QtCore.QSize(50, 50))
        self.buttonDelItem.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.buttonDelItem.setText("")
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap("D:\\CODES\\Python\\EbookCollection\\editor\\../icons/white/delete_item.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.buttonDelItem.setIcon(icon1)
        self.buttonDelItem.setIconSize(QtCore.QSize(40, 40))
        self.buttonDelItem.setCheckable(False)
        self.buttonDelItem.setFlat(False)
        self.buttonDelItem.setObjectName("buttonDelItem")
        self.buttonBoxLayout.addWidget(self.buttonDelItem)
        self.buttonSave = QtWidgets.QPushButton(EditorWindow)
        self.buttonSave.setMinimumSize(QtCore.QSize(50, 50))
        self.buttonSave.setMaximumSize(QtCore.QSize(50, 50))
        self.buttonSave.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.buttonSave.setText("")
        icon2 = QtGui.QIcon()
        icon2.addPixmap(QtGui.QPixmap("D:\\CODES\\Python\\EbookCollection\\editor\\../icons/white/save.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.buttonSave.setIcon(icon2)
        self.buttonSave.setIconSize(QtCore.QSize(40, 40))
        self.buttonSave.setCheckable(False)
        self.buttonSave.setFlat(False)
        self.buttonSave.setObjectName("buttonSave")
        self.buttonBoxLayout.addWidget(self.buttonSave)
        self.buttonRefreshPreview = QtWidgets.QPushButton(EditorWindow)
        self.buttonRefreshPreview.setMinimumSize(QtCore.QSize(50, 50))
        self.buttonRefreshPreview.setMaximumSize(QtCore.QSize(50, 50))
        self.buttonRefreshPreview.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.buttonRefreshPreview.setText("")
        icon3 = QtGui.QIcon()
        icon3.addPixmap(QtGui.QPixmap("D:\\CODES\\Python\\EbookCollection\\editor\\../icons/white/refresh.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.buttonRefreshPreview.setIcon(icon3)
        self.buttonRefreshPreview.setIconSize(QtCore.QSize(40, 40))
        self.buttonRefreshPreview.setCheckable(False)
        self.buttonRefreshPreview.setFlat(False)
        self.buttonRefreshPreview.setObjectName("buttonRefreshPreview")
        self.buttonBoxLayout.addWidget(self.buttonRefreshPreview)
        spacerItem = QtWidgets.QSpacerItem(20, 40, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.buttonBoxLayout.addItem(spacerItem)
        self.horizontalLayout.addLayout(self.buttonBoxLayout)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.treeFileTable = QtWidgets.QTreeWidget(EditorWindow)
        self.treeFileTable.setMinimumSize(QtCore.QSize(180, 0))
        self.treeFileTable.setMaximumSize(QtCore.QSize(180, 16777215))
        self.treeFileTable.setStyleSheet("::section{\n"
"background-color:#4B4B4B;\n"
"}\n"
"QTreeWidget::item { \n"
"    padding-left:2px;\n"
"}\n"
"QTreeWidget::item:hover, QTreeWidget::branch:hover\n"
"{\n"
"    color: rgb(43, 179, 246);\n"
"    cursor: pointer;\n"
"}\n"
"QTreeWidget::item:selected { \n"
"    background-color: rgb(0, 85, 255);\n"
"color:white; \n"
"}")
        self.treeFileTable.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.treeFileTable.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.treeFileTable.setProperty("showDropIndicator", False)
        self.treeFileTable.setIndentation(0)
        self.treeFileTable.setUniformRowHeights(True)
        self.treeFileTable.setExpandsOnDoubleClick(False)
        self.treeFileTable.setObjectName("treeFileTable")
        self.treeFileTable.headerItem().setTextAlignment(0, QtCore.Qt.AlignCenter)
        item_0 = QtWidgets.QTreeWidgetItem(self.treeFileTable)
        item_0 = QtWidgets.QTreeWidgetItem(self.treeFileTable)
        item_0 = QtWidgets.QTreeWidgetItem(self.treeFileTable)
        item_0 = QtWidgets.QTreeWidgetItem(self.treeFileTable)
        self.treeFileTable.header().setVisible(True)
        self.treeFileTable.header().setCascadingSectionResizes(False)
        self.treeFileTable.header().setSortIndicatorShown(False)
        self.verticalLayout.addWidget(self.treeFileTable)
        self.treeContentTable = QtWidgets.QTreeWidget(EditorWindow)
        self.treeContentTable.setMinimumSize(QtCore.QSize(180, 0))
        self.treeContentTable.setMaximumSize(QtCore.QSize(180, 16777215))
        self.treeContentTable.setStyleSheet("::section{\n"
"background-color:#4B4B4B;\n"
"}\n"
"QTreeWidget::item { \n"
"    padding-left:2px;\n"
"}\n"
"QTreeWidget::item:hover, QTreeWidget::branch:hover\n"
"{\n"
"    color: rgb(43, 179, 246);\n"
"    cursor: pointer;\n"
"}\n"
"QTreeWidget::item:selected { \n"
"    background-color: rgb(0, 85, 255);\n"
"color:white; \n"
"}")
        self.treeContentTable.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.treeContentTable.setEditTriggers(QtWidgets.QAbstractItemView.NoEditTriggers)
        self.treeContentTable.setProperty("showDropIndicator", False)
        self.treeContentTable.setIndentation(0)
        self.treeContentTable.setUniformRowHeights(True)
        self.treeContentTable.setExpandsOnDoubleClick(False)
        self.treeContentTable.setObjectName("treeContentTable")
        self.treeContentTable.headerItem().setTextAlignment(0, QtCore.Qt.AlignCenter)
        item_0 = QtWidgets.QTreeWidgetItem(self.treeContentTable)
        item_0 = QtWidgets.QTreeWidgetItem(self.treeContentTable)
        item_0 = QtWidgets.QTreeWidgetItem(self.treeContentTable)
        item_0 = QtWidgets.QTreeWidgetItem(self.treeContentTable)
        self.treeContentTable.header().setVisible(True)
        self.treeContentTable.header().setCascadingSectionResizes(False)
        self.treeContentTable.header().setSortIndicatorShown(False)
        self.verticalLayout.addWidget(self.treeContentTable)
        self.horizontalLayout.addLayout(self.verticalLayout)
        self.splitter = QtWidgets.QSplitter(EditorWindow)
        self.splitter.setStyleSheet("::handle{\n"
"image: url(../icons/white/splitter_resize.png);\n"
"}")
        self.splitter.setOrientation(QtCore.Qt.Horizontal)
        self.splitter.setHandleWidth(10)
        self.splitter.setObjectName("splitter")
        self.tabWidget = editorTabManager(self.splitter)
        self.tabWidget.setStyleSheet("QTabWidget::tab-bar {\n"
"    \n"
" }\n"
"QTabBar::tab {\n"
"  background: rgb(80, 80, 80);\n"
"  color: white;\n"
"  padding: 10px;\n"
"margin-right:2px;\n"
"border-color:rgb(0,0,0);\n"
"border-width:1px;\n"
"border-style:solid;\n"
" }\n"
"\n"
" QTabBar::tab:selected {\n"
"  background: rgb(0, 135, 202);\n"
" }")
        self.tabWidget.setTabPosition(QtWidgets.QTabWidget.North)
        self.tabWidget.setTabShape(QtWidgets.QTabWidget.Rounded)
        self.tabWidget.setElideMode(QtCore.Qt.ElideNone)
        self.tabWidget.setObjectName("tabWidget")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.tab)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.scrollArea = QtWidgets.QScrollArea(self.tab)
        self.scrollArea.setMaximumSize(QtCore.QSize(16777215, 50))
        self.scrollArea.setWidgetResizable(True)
        self.scrollArea.setObjectName("scrollArea")
        self.scrollAreaWidgetContents = QtWidgets.QWidget()
        self.scrollAreaWidgetContents.setGeometry(QtCore.QRect(0, 0, 203, 48))
        self.scrollAreaWidgetContents.setObjectName("scrollAreaWidgetContents")
        self.scrollArea.setWidget(self.scrollAreaWidgetContents)
        self.verticalLayout_2.addWidget(self.scrollArea)
        self.textEdit = QtWidgets.QTextEdit(self.tab)
        self.textEdit.setStyleSheet("background-color: rgb(154, 154, 154);\n"
"color: rgb(0, 0, 0);")
        self.textEdit.setObjectName("textEdit")
        self.verticalLayout_2.addWidget(self.textEdit)
        self.tabWidget.addTab(self.tab, "")
        self.tab_2 = QtWidgets.QWidget()
        self.tab_2.setObjectName("tab_2")
        self.tabWidget.addTab(self.tab_2, "")
        self.webView = QtWebKitWidgets.QWebView(self.splitter)
        self.webView.setAutoFillBackground(False)
        self.webView.setStyleSheet("background-color: rgb(255, 255, 255);")
        self.webView.setObjectName("webView")
        self.horizontalLayout.addWidget(self.splitter)

        self.retranslateUi(EditorWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(EditorWindow)

    def retranslateUi(self, EditorWindow):
        _translate = QtCore.QCoreApplication.translate
        EditorWindow.setWindowTitle(_translate("EditorWindow", "Ebook Collection - Editor"))
        self.treeFileTable.headerItem().setText(0, _translate("EditorWindow", "1"))
        __sortingEnabled = self.treeFileTable.isSortingEnabled()
        self.treeFileTable.setSortingEnabled(False)
        self.treeFileTable.topLevelItem(0).setText(0, _translate("EditorWindow", "Cover"))
        self.treeFileTable.topLevelItem(1).setText(0, _translate("EditorWindow", "Index"))
        self.treeFileTable.topLevelItem(2).setText(0, _translate("EditorWindow", "Chapter 1"))
        self.treeFileTable.topLevelItem(3).setText(0, _translate("EditorWindow", "Chapter 2"))
        self.treeFileTable.setSortingEnabled(__sortingEnabled)
        self.treeContentTable.headerItem().setText(0, _translate("EditorWindow", "1"))
        __sortingEnabled = self.treeContentTable.isSortingEnabled()
        self.treeContentTable.setSortingEnabled(False)
        self.treeContentTable.topLevelItem(0).setText(0, _translate("EditorWindow", "Cover"))
        self.treeContentTable.topLevelItem(1).setText(0, _translate("EditorWindow", "Index"))
        self.treeContentTable.topLevelItem(2).setText(0, _translate("EditorWindow", "Chapter 1"))
        self.treeContentTable.topLevelItem(3).setText(0, _translate("EditorWindow", "Chapter 2"))
        self.treeContentTable.setSortingEnabled(__sortingEnabled)
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("EditorWindow", "Tab 1"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_2), _translate("EditorWindow", "Tab 2"))
from PyQt5 import QtWebKitWidgets
from editing_pane import editorTabManager


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    EditorWindow = QtWidgets.QWidget()
    ui = Ui_EditorWindow()
    ui.setupUi(EditorWindow)
    EditorWindow.show()
    sys.exit(app.exec_())
